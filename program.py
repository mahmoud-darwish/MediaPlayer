# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'project.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QTimer
from ai import Ui_ai
from AudioControlling import Controls
import res_rc
class Ui_MusicApp(QtWidgets.QMainWindow):
    def openwindow(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_ai()
        self.ui.setupUi(self.window)
        self.window.show()

    def upload_file(self):
        options = QtWidgets.QFileDialog.Options()
        options |= QtWidgets.QFileDialog.ReadOnly
        file_name, _ = QtWidgets.QFileDialog.getOpenFileName(self, "QFileDialog.getOpenFileName()", "", "All Files (*);;Python Files (*.py)", options=options)
        
        if file_name:
            #self.label.setText(f'Selected file: {file_name}')
            #print(file_name)
            self.song.init_play(file_name)
            self.timer_active = True
            self.timer = QTimer(self)
            self.timer.timeout.connect(self.TIMER)  # Connect the timeout signal to the increment_value method
            self.timer.start(1000) 
            #print(str(self.song.Totaltime()) )
    def format_time(self,seconds):
        minutes = int(seconds // 60)
        remaining_seconds = int(seconds % 60)
        return f'{minutes:02}:{remaining_seconds:02}'
    def increase_volume(self,amount):
        self.volume_label.setText(str(amount))
        self.song.increase_volume(amount)

        
    def TIMER(self,scale = 1):
        self.value += 1 * scale
        self.time_label.setText(f' {self.format_time(self.value)} / {self.format_time(int(self.song.Totaltime()))}')
        self.horizontalSlider.setValue(int(self.value / int(self.song.Totaltime()) * 100))
        #self.label.setText(f'Value: {self.value}' )    
    def on_horizontal_changed(self,value):
        self.horizontalSlider.setMinimum(0)
        self.horizontalSlider.setMaximum(100)
        self.timer_active = False
        temp = value * int(self.song.Totaltime()) / 100 - self.value
        self.value = value * int(self.song.Totaltime()) /100
        if temp > 0 and abs(temp) > 2 :
                self.song.fast_forward(int(temp))
        elif temp < 0 and abs(temp) > 2:
                self.song.rewind(int(temp))
        
        print(value)
        print(temp)
        print(self.value)

        print(value)
    def Toggle_resume(self):
        if self.song.player.is_playing():
            self.timer.stop()
            self.song.player.pause()
            
            print("stop")
        else:
            self.timer.start(1000) 
            self.song.player.play()
            self.flag = 1
            print("resume")
    def setupUi(self, MusicApp):
        self.value  = 0
        self.song = Controls()
        self.timer_active = True
        MusicApp.setObjectName("MusicApp")
        MusicApp.resize(1080, 720)
        MusicApp.setMinimumSize(QtCore.QSize(1080, 720))
        self.centralwidget = QtWidgets.QWidget(MusicApp)
        self.centralwidget.setObjectName("centralwidget")
        self.bg = QtWidgets.QLabel(self.centralwidget)
        self.bg.setGeometry(QtCore.QRect(0, 0, 1080, 720))
        self.bg.setMinimumSize(QtCore.QSize(1080, 720))
        self.bg.setAutoFillBackground(False)
        self.bg.setText("")
        self.bg.setPixmap(QtGui.QPixmap("../project/hand-1850120_1920.jpg"))
        self.bg.setScaledContents(True)
        self.bg.setWordWrap(False)
        self.bg.setObjectName("bg")
        self.bg_overlay = QtWidgets.QLabel(self.centralwidget)
        self.bg_overlay.setEnabled(True)
        self.bg_overlay.setGeometry(QtCore.QRect(0, 0, 1080, 720))
        self.bg_overlay.setMinimumSize(QtCore.QSize(1080, 720))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.bg_overlay.setFont(font)
        self.bg_overlay.setLineWidth(1)
        self.bg_overlay.setText("")
        self.bg_overlay.setPixmap(QtGui.QPixmap("../bg_overlay.png"))
        self.bg_overlay.setScaledContents(True)
        self.bg_overlay.setIndent(-1)
        self.bg_overlay.setObjectName("bg_overlay")
        self.logo = QtWidgets.QLabel(self.centralwidget)
        self.logo.setGeometry(QtCore.QRect(-10, -20, 221, 101))
        self.logo.setStyleSheet("")
        self.logo.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.logo.setFrameShadow(QtWidgets.QFrame.Plain)
        self.logo.setLineWidth(1)
        self.logo.setText("")
        self.logo.setPixmap(QtGui.QPixmap("../2__1_-removebg-preview.png"))
        self.logo.setScaledContents(True)
        self.logo.setObjectName("logo")
        self.min = QtWidgets.QPushButton(self.centralwidget)
        self.min.setGeometry(QtCore.QRect(998, 0, 41, 31))
        self.min.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.min.setAutoFillBackground(False)
        self.min.setStyleSheet("QPushButton{\n"
"    background-color: rgba(255, 255, 255, 0);\n"
"    background-repeat:no-repeat;\n"
"    border:none;\n"
"    background-position:center center;\n"
"\n"
"}\n"
"QPushButton:hover{\n"
"    background-color: rgba(255,255,255,130);\n"
"}\n"
"\n"
"\n"
"QPushButton:pressed{\n"
"    background-color: (255,255,255,130);\n"
"\n"
"    color:rgba(0,0,0,100);\n"
"}")
        self.min.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../Advanced_Music_Player_with_PyQt5-starter/utils/images/min.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.min.setIcon(icon)
        self.min.setIconSize(QtCore.QSize(20, 20))
        self.min.setFlat(True)
        self.min.setObjectName("min")
        self.qiut = QtWidgets.QPushButton(self.centralwidget)
        self.qiut.setGeometry(QtCore.QRect(1039, 0, 41, 31))
        self.qiut.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.qiut.setAutoFillBackground(False)
        self.qiut.setStyleSheet("QPushButton{\n"
"    background-color: rgba(255, 255, 255, 0);\n"
"    background-repeat:no-repeat;\n"
"    border:none;\n"
"    background-position:center center;\n"
"\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color: rgba(255, 20, 12, 200);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"    background-color: rgba(255, 20, 12, 200);\n"
"    border-color:rgba(255,255,255,30);\n"
"    border-style:inset;\n"
"    color:rgba(0,0,0,100);\n"
"}")
        self.qiut.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("../Advanced_Music_Player_with_PyQt5-starter/utils/images/quit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.qiut.setIcon(icon1)
        self.qiut.setIconSize(QtCore.QSize(20, 20))
        self.qiut.setFlat(True)
        self.qiut.setObjectName("qiut")
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_2.setGeometry(QtCore.QRect(0, 240, 341, 181))
        self.frame_2.setStyleSheet("background-color: rgba(0, 0, 0,150);\n"
"")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.current_playing = QtWidgets.QLabel(self.frame_2)
        self.current_playing.setGeometry(QtCore.QRect(60, 13, 191, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.current_playing.setFont(font)
        self.current_playing.setStyleSheet("background-color: rgba(0, 0, 0,0);\n"
"color: rgb(85, 0, 255);")
        self.current_playing.setObjectName("current_playing")
        self.current_playing_logo = QtWidgets.QLabel(self.frame_2)
        self.current_playing_logo.setGeometry(QtCore.QRect(20, 10, 31, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.current_playing_logo.setFont(font)
        self.current_playing_logo.setStyleSheet("background-color: rgba(0, 0, 0,0);\n"
"color: rgb(79, 208, 178);")
        self.current_playing_logo.setText("")
        self.current_playing_logo.setPixmap(QtGui.QPixmap("../cd-512.png"))
        self.current_playing_logo.setScaledContents(True)
        self.current_playing_logo.setObjectName("current_playing_logo")
        self.name_of_song = QtWidgets.QLabel(self.frame_2)
        self.name_of_song.setGeometry(QtCore.QRect(20, 50, 141, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.name_of_song.setFont(font)
        self.name_of_song.setStyleSheet("background-color: rgba(0, 0, 0,0);\n"
"color: rgb(85, 0, 255);")
        self.name_of_song.setObjectName("name_of_song")
        self.current_song_name = QtWidgets.QLabel(self.frame_2)
        self.current_song_name.setGeometry(QtCore.QRect(20, 80, 281, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.current_song_name.setFont(font)
        self.current_song_name.setStyleSheet("background-color: rgba(0, 0, 0,0);\n"
"color: rgb(255, 255, 255);")
        self.current_song_name.setObjectName("current_song_name")
        self.path = QtWidgets.QLabel(self.frame_2)
        self.path.setGeometry(QtCore.QRect(20, 110, 141, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.path.setFont(font)
        self.path.setStyleSheet("background-color: rgba(0, 0, 0,0);\n"
"color: rgb(85, 0, 255);")
        self.path.setObjectName("path")
        self.current_song_path = QtWidgets.QLabel(self.frame_2)
        self.current_song_path.setGeometry(QtCore.QRect(20, 140, 281, 21))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.current_song_path.setFont(font)
        self.current_song_path.setStyleSheet("background-color: rgba(0, 0, 0,0);\n"
"color: rgb(255, 255, 255);")
        self.current_song_path.setObjectName("current_song_path")
        self.frame_3 = QtWidgets.QFrame(self.centralwidget)
        self.frame_3.setGeometry(QtCore.QRect(690, 61, 391, 181))
        self.frame_3.setStyleSheet("background-color: rgba(255, 255, 255, 150);\n"
"")
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.play_btn = QtWidgets.QPushButton(self.frame_3,clicked = lambda:self.Toggle_resume())
        self.play_btn.setGeometry(QtCore.QRect(117, 110, 51, 51))
        self.play_btn.setMinimumSize(QtCore.QSize(30, 30))
        self.play_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.play_btn.setStyleSheet("QPushButton{\n"
"    background-color: rgba(255, 255, 255, 0);\n"
"    background-repeat:no-repeat;\n"
"    border:none;\n"
"    background-position:center center;\n"
"\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color: rgba(255,255,255,100);\n"
"}\n"
"")
        self.play_btn.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("../photo_2024-05-20_14-17-28-removebg-preview.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.play_btn.setIcon(icon2)
        self.play_btn.setIconSize(QtCore.QSize(45, 45))
        self.play_btn.setFlat(True)
        self.play_btn.setObjectName("play_btn")
        
        self.previous = QtWidgets.QPushButton(self.frame_3)
        self.previous.setGeometry(QtCore.QRect(66, 110, 51, 51))
        self.previous.setMinimumSize(QtCore.QSize(30, 30))
        self.previous.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.previous.setStyleSheet("QPushButton{\n"
"    background-color: rgba(255, 255, 255, 0);\n"
"    background-repeat:no-repeat;\n"
"    border:none;\n"
"    background-position:center center;\n"
"\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color: rgba(255,255,255,100);\n"
"}\n"
"")
        self.previous.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("../left.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.previous.setIcon(icon3)
        self.previous.setIconSize(QtCore.QSize(50, 50))
        self.previous.setFlat(True)
        self.previous.setObjectName("previous")
        self.next = QtWidgets.QPushButton(self.frame_3)
        self.next.setGeometry(QtCore.QRect(168, 110, 51, 51))
        self.next.setMinimumSize(QtCore.QSize(30, 30))
        self.next.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.next.setStyleSheet("QPushButton{\n"
"    background-color: rgba(255, 255, 255, 0);\n"
"    background-repeat:no-repeat;\n"
"    border:none;\n"
"    background-position:center center;\n"
"\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color: rgba(255,255,255,100);\n"
"}\n"
"")
        self.next.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("../right.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.next.setIcon(icon4)
        self.next.setIconSize(QtCore.QSize(50, 50))
        self.next.setFlat(True)
        self.next.setObjectName("next")
        self.horizontalSlider = QtWidgets.QSlider(self.frame_3)
        self.horizontalSlider.setGeometry(QtCore.QRect(13, 80, 250, 22))
        self.horizontalSlider.setCursor(QtGui.QCursor(QtCore.Qt.OpenHandCursor))
        self.horizontalSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid;\n"
"    height: 10px;\n"
"    margin: 0px;\n"
"    }\n"
"QSlider::handle:horizontal {\n"
"    background-color: black;\n"
"    border: 1px solid;\n"
"    height: 40px;\n"
"    width: 8px;\n"
"    margin: -15px 0px;\n"
"    }")
        self.horizontalSlider.setMinimum(0)
        self.horizontalSlider.setMaximum(100)
        self.horizontalSlider.valueChanged.connect(self.on_horizontal_changed)
        self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider.setObjectName("horizontalSlider")
        self.time_label = QtWidgets.QLabel(self.frame_3)
        self.time_label.setGeometry(QtCore.QRect(70, 30, 136, 35))
        self.time_label.setMaximumSize(QtCore.QSize(16777215, 35))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.time_label.setFont(font)
        self.time_label.setStyleSheet("color: rgb(0, 0, 0);\n"
"padding:2px;\n"
"border-radius:5px")
        self.time_label.setObjectName("time_label")
        self.verticalSlider = QtWidgets.QSlider(self.frame_3)
        self.verticalSlider.setMinimum(0)
        self.verticalSlider.setMaximum(100)
        self.verticalSlider.valueChanged.connect(self.increase_volume)
        self.verticalSlider.setGeometry(QtCore.QRect(354, 10, 22, 160))
        self.verticalSlider.setCursor(QtGui.QCursor(QtCore.Qt.OpenHandCursor))
        self.verticalSlider.setStyleSheet("QSlider::handle:vertical {\n"
"    background-color: black;\n"
"}")
        self.verticalSlider.setOrientation(QtCore.Qt.Vertical)
        self.verticalSlider.setObjectName("verticalSlider")
        self.lineEdit = QtWidgets.QLineEdit(self.frame_3)
        self.lineEdit.setGeometry(QtCore.QRect(276, -20, 21, 211))
        self.lineEdit.setStyleSheet("background-color: rgba(0, 0, 0);\n"
"")
        self.lineEdit.setObjectName("lineEdit")
        self.volume_label = QtWidgets.QLabel(self.frame_3)
        self.volume_label.setEnabled(True)
        self.volume_label.setGeometry(QtCore.QRect(310, 70, 41, 41))
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.volume_label.setFont(font)
        self.volume_label.setStyleSheet("color: rgb(0, 0, 0);\n"
"background-color: rgba(255, 255, 255, 0);")
        self.volume_label.setObjectName("volume_label")
        self.loop = QtWidgets.QPushButton(self.frame_3)
        self.loop.setGeometry(QtCore.QRect(13, 110, 51, 51))
        self.loop.setMinimumSize(QtCore.QSize(30, 30))
        self.loop.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.loop.setStyleSheet("QPushButton{\n"
"    background-color: rgba(255, 255, 255, 0);\n"
"    background-repeat:no-repeat;\n"
"    border:none;\n"
"    background-position:center center;\n"
"\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color: rgba(255,255,255,100);\n"
"}\n"
"")
        self.loop.setText("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("../—Pngtree—loop glyph black icon_4008295.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.loop.setIcon(icon5)
        self.loop.setIconSize(QtCore.QSize(50, 50))
        self.loop.setFlat(True)
        self.loop.setObjectName("loop")
        self.mute = QtWidgets.QPushButton(self.frame_3,clicked = lambda:self.song.mute())
        self.mute.setGeometry(QtCore.QRect(220, 110, 51, 51))
        self.mute.setMinimumSize(QtCore.QSize(30, 30))
        self.mute.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.mute.setStyleSheet("QPushButton{\n"
"    background-color: rgba(255, 255, 255, 0);\n"
"    background-repeat:no-repeat;\n"
"    border:none;\n"
"    background-position:center center;\n"
"\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color: rgba(255,255,255,100);\n"
"}\n"
"")
        self.mute.setText("")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("../—Pngtree—mute icon_4419502.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.mute.setIcon(icon6)
        self.mute.setIconSize(QtCore.QSize(50, 50))
        self.mute.setFlat(True)
        self.mute.setObjectName("mute")
        self.x2 = QtWidgets.QPushButton(self.frame_3)
        self.x2.setGeometry(QtCore.QRect(10, 23, 51, 51))
        self.x2.setMinimumSize(QtCore.QSize(30, 30))
        self.x2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.x2.setStyleSheet("QPushButton{\n"
"    background-color: rgba(255, 255, 255, 0);\n"
"    background-repeat:no-repeat;\n"
"    border:none;\n"
"    background-position:center center;\n"
"\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"    background-color: rgba(255,255,255,100);\n"
"}\n"
"")
        self.x2.setText("")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("../photo_2024-05-20_14-29-43-removebg-preview.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.x2.setIcon(icon7)
        self.x2.setIconSize(QtCore.QSize(55, 55))
        self.x2.setFlat(True)
        self.x2.setObjectName("x2")
        self.stackedWidget = QtWidgets.QStackedWidget(self.centralwidget)
        self.stackedWidget.setGeometry(QtCore.QRect(340, 61, 351, 362))
        self.stackedWidget.setStyleSheet("background-color: rgba(0, 0, 0, 50);\n"
"border-radius:20px;\n"
"")
        self.stackedWidget.setObjectName("stackedWidget")
        self.page = QtWidgets.QWidget()
        self.page.setObjectName("page")
        self.label = QtWidgets.QLabel(self.page)
        self.label.setGeometry(QtCore.QRect(20, 10, 100, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("color: rgb(255, 255, 255);")
        self.label.setObjectName("label")
        self.delete_2 = QtWidgets.QPushButton(self.page)
        self.delete_2.setGeometry(QtCore.QRect(280, 10, 41, 41))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.delete_2.setFont(font)
        self.delete_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.delete_2.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius:5px;")
        self.delete_2.setText("")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("../delete-button-png-delete-button-128.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.delete_2.setIcon(icon8)
        self.delete_2.setIconSize(QtCore.QSize(30, 25))
        self.delete_2.setObjectName("delete_2")
        self.add = QtWidgets.QPushButton(self.page)
        self.add.setGeometry(QtCore.QRect(220, 10, 41, 41))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.add.setFont(font)
        self.add.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.add.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius:5px;")
        self.add.setText("")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("../5e24b9d8e0346dcc1a2eb7cd8cf7778d.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.add.setIcon(icon9)
        self.add.setIconSize(QtCore.QSize(30, 25))
        self.add.setObjectName("add")
        self.listWidget = QtWidgets.QListWidget(self.page)
        self.listWidget.setGeometry(QtCore.QRect(15, 60, 321, 290))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.listWidget.setFont(font)
        self.listWidget.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.listWidget.setStyleSheet("background-color: rgba(255, 255, 255, 50);\n"
"border-radius:20px;\n"
"color: rgb(0, 255, 255);\n"
"")
        self.listWidget.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.listWidget.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.listWidget.setObjectName("listWidget")
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        self.stackedWidget.addWidget(self.page)
        self.page_3 = QtWidgets.QWidget()
        self.page_3.setObjectName("page_3")
        self.stackedWidget.addWidget(self.page_3)
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setObjectName("page_2")
        self.stackedWidget.addWidget(self.page_2)
        self.add_to_fav_btn = QtWidgets.QPushButton(self.centralwidget)
        self.add_to_fav_btn.setGeometry(QtCore.QRect(60, 100, 221, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.add_to_fav_btn.setFont(font)
        self.add_to_fav_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.add_to_fav_btn.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"color: rgb(0, 0, 0);\n"
"border-radius:10px;\n"
"")
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("../618246_heart-logo-png.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.add_to_fav_btn.setIcon(icon10)
        self.add_to_fav_btn.setIconSize(QtCore.QSize(24, 24))
        self.add_to_fav_btn.setObjectName("add_to_fav_btn")
        self.add_to_playlist = QtWidgets.QPushButton(self.centralwidget,clicked  = lambda:self.upload_file())
        self.add_to_playlist.setGeometry(QtCore.QRect(60, 170, 221, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.add_to_playlist.setFont(font)
        self.add_to_playlist.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.add_to_playlist.setStyleSheet("background-color: rgb(0, 255, 255);\n"
"color: rgb(0, 0, 0);\n"
"border-radius:10px;")
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap("../—Pngtree—playlist icon_4419927.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.add_to_playlist.setIcon(icon11)
        self.add_to_playlist.setIconSize(QtCore.QSize(34, 34))
        self.add_to_playlist.setObjectName("add_to_playlist")
        self.song_list_btn = QtWidgets.QPushButton(self.centralwidget)
        self.song_list_btn.setGeometry(QtCore.QRect(757, 260, 155, 35))
        self.song_list_btn.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.song_list_btn.setFont(font)
        self.song_list_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.song_list_btn.setStyleSheet("background-color:rgb(255, 255, 255);\n"
"border-radius:15px;")
        self.song_list_btn.setObjectName("song_list_btn")
        self.playlists_btn = QtWidgets.QPushButton(self.centralwidget)
        self.playlists_btn.setGeometry(QtCore.QRect(757, 360, 155, 35))
        self.playlists_btn.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.playlists_btn.setFont(font)
        self.playlists_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.playlists_btn.setStyleSheet("background-color: rgb(85, 0, 255);\n"
"border-radius:15px;")
        self.playlists_btn.setObjectName("playlists_btn")
        self.favourites_btn = QtWidgets.QPushButton(self.centralwidget)
        self.favourites_btn.setGeometry(QtCore.QRect(757, 310, 155, 35))
        self.favourites_btn.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.favourites_btn.setFont(font)
        self.favourites_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.favourites_btn.setStyleSheet("background-color: rgb(0, 255, 255);\n"
"border-radius:15px;")
        self.favourites_btn.setObjectName("favourites_btn")
        self.ai = QtWidgets.QPushButton(self.centralwidget)
        self.ai.setGeometry(QtCore.QRect(930, 262, 60, 60))
        self.ai.setStyleSheet("background-color:rgb(255, 255, 255);\n"
"border-radius:30px;")
        self.ai.setText("")
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap("../Robot - 512x512.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.ai.setIcon(icon12)
        self.ai.setIconSize(QtCore.QSize(50, 50))
        self.ai.setObjectName("ai")
        self.ai_2 = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.openwindow())
        self.ai_2.setGeometry(QtCore.QRect(930, 332, 60, 60))
        self.ai_2.setStyleSheet("background-color:rgb(255, 255, 255);\n"
"border-radius:30px;")
        self.ai_2.setText("")
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap("../PngItem_5002858.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.ai_2.setIcon(icon13)
        self.ai_2.setIconSize(QtCore.QSize(50, 50))
        self.ai_2.setObjectName("ai_2")
        MusicApp.setCentralWidget(self.centralwidget)

        self.retranslateUi(MusicApp)
        self.stackedWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MusicApp)

    def retranslateUi(self, MusicApp):
        _translate = QtCore.QCoreApplication.translate
        MusicApp.setWindowTitle(_translate("MusicApp", "Sound Wave"))
        self.logo.setWhatsThis(_translate("MusicApp", "<html><head/><body><p><img src=\":/img/Sound Wave-logo (1)/cover.png\"/></p></body></html>"))
        self.current_playing.setText(_translate("MusicApp", "Currently Playing"))
        self.name_of_song.setText(_translate("MusicApp", "Name"))
        self.current_song_name.setText(_translate("MusicApp", "Song name goes here"))
        self.path.setText(_translate("MusicApp", "Path"))
        self.current_song_path.setText(_translate("MusicApp", "Song path goes here"))
        self.time_label.setText(_translate("MusicApp", "00:00 / 00:00"))
        self.volume_label.setText(_translate("MusicApp", "50"))
        self.label.setText(_translate("MusicApp", "Song List"))
        __sortingEnabled = self.listWidget.isSortingEnabled()
        self.listWidget.setSortingEnabled(False)
        item = self.listWidget.item(0)
        item.setText(_translate("MusicApp", "Song1"))
        item = self.listWidget.item(1)
        item.setText(_translate("MusicApp", "Song2"))
        item = self.listWidget.item(2)
        item.setText(_translate("MusicApp", "Song3"))
        self.listWidget.setSortingEnabled(__sortingEnabled)
        self.add_to_fav_btn.setText(_translate("MusicApp", "Add to Favourites"))
        self.add_to_playlist.setText(_translate("MusicApp", "Add to Playlist"))
        self.song_list_btn.setText(_translate("MusicApp", "Song List"))
        self.playlists_btn.setText(_translate("MusicApp", "Playlists"))
        self.favourites_btn.setText(_translate("MusicApp", "Favourites"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MusicApp = QtWidgets.QMainWindow()
    ui = Ui_MusicApp()
    ui.setupUi(MusicApp)
    MusicApp.show()
    sys.exit(app.exec_())
